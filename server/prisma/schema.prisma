// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  email String @unique
  password String
  CreatedAt DateTime @default(now())
  UpdatedAt DateTime @updatedAt

  projects Project[] @relation("UserProjects")
  memberships Membership[]
  tasksAssigned Task[] @relation("UserTasksAssigned")
 
  @@map("users")
}

model Project {
  id String @id @default(uuid())
  name String
  ownerId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  owner User @relation("UserProjects",fields: [ownerId], references: [id])
  memberships Membership[]
  tasks Task[]
  

  @@map("projects")
}

model Membership {
  id String @id @default(uuid())
  userId String
  projectId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
  project Project @relation(fields: [projectId], references: [id])

  @@map("memberships")
}

model Task {
  id String @id @default(uuid())
  title String
  description String
  status TaskStatus @default(TODO)
  projectId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  assignedId String

  project Project @relation(fields: [projectId], references: [id])
  assigned User @relation("UserTasksAssigned",fields: [assignedId], references: [id])

  @@map("tasks")
}

enum TaskStatus {
  TODO
  IN_PROGRESS
  DONE
}
